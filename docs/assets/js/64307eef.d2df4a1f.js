"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[476],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),v=p(r),f=i,d=v["".concat(s,".").concat(f)]||v[f]||u[f]||a;return r?n.createElement(d,o(o({ref:t},l),{},{components:r})):n.createElement(d,o({ref:t},l))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=v;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},9431:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],c={sidebar_position:4},s=void 0,p={unversionedId:"Software Development Guide/Data receiving",id:"Software Development Guide/Data receiving",title:"Data receiving",description:"Data reception requires multiple parameters, so define a specific class to receive parameters. The data receiving class is in the java > vo directory. Next, we will introduce several data receiving classes.",source:"@site/docs/Software Development Guide/Data receiving.md",sourceDirName:"Software Development Guide",slug:"/Software Development Guide/Data receiving",permalink:"/IGAOD/Software Development Guide/Data receiving",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Data interface",permalink:"/IGAOD/Software Development Guide/Data interface"}},l={},u=[{value:"ConfigVO",id:"configvo",level:2},{value:"VaseVO",id:"vasevo",level:2}],v={toc:u};function f(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},v,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Data reception requires multiple parameters, so define a specific class to receive parameters. The data receiving class is in the java > vo directory. Next, we will introduce several data receiving classes."),(0,a.kt)("h2",{id:"configvo"},"ConfigVO"),(0,a.kt)("p",null,"This class mainly passes the parameters required by IGA."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"@Data\npublic class ConfigVO {\n    private int selectionOperator; //selection operator\n    private int crossoverOperator; //crossover operator\n    private int mutationOperator;  //mutation operator\n    private int code;              //encoding\n    private int size;             //population size\n    private int generation;     //number of population evolution\n    private double crossover;     //crossover rate\n    private double mutation;       //mutation rate\n    private int app;               //application scenarios\n}\n\n")),(0,a.kt)("h2",{id:"vasevo"},"VaseVO"),(0,a.kt)("p",null,"This class is used to receive individual parameters and fitness. If users want to create new instances, they need to create new receive classes as required."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"@Data\npublic class VaseVO {\n    private int p1;\n    private int p2;\n    private int p3;\n    private int p4;\n    private int p5;\n    private int p6;\n    private int p7;\n    private int p8;\n    private int p9;\n    private int fitness;\n}\n\n")))}f.isMDXComponent=!0}}]);