"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[131],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,v=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(v,a(a({ref:t},p),{},{components:n})):r.createElement(v,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6328:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:1},l=void 0,c={unversionedId:"Software Development Guide/Create application scenarios",id:"Software Development Guide/Create application scenarios",title:"Create application scenarios",description:"If the user needs to customize the design instance, he can create it on a new file according to the provided two instance templates. Creating a new instance is divided into the following two steps:",source:"@site/docs/Software Development Guide/Create application scenarios.md",sourceDirName:"Software Development Guide",slug:"/Software Development Guide/Create application scenarios",permalink:"/IGAOD/Software Development Guide/Create application scenarios",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Operator",permalink:"/IGAOD/Algorithm implementation/Operator"},next:{title:"ThreeJS",permalink:"/IGAOD/Software Development Guide/ThreeJS"}},p={},u=[{value:"Create html",id:"create-html",level:2},{value:"Create controller",id:"create-controller",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"If the user needs to customize the design instance, he can create it on a new file according to the provided two instance templates. Creating a new instance is divided into the following two steps:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"At resources > templates, create the html view file"),(0,i.kt)("li",{parentName:"ul"},"At java > controller, create and edit the controller JAVA file")),(0,i.kt)("h2",{id:"create-html"},"Create html"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Interactive Genetic Algorithm</title>\n    <link href="css/style.css" rel="stylesheet" type="text/css">\n</head>\n<body>\n<div class="cation-content">\n    <div class="cation-flex">\n        <div class="cation-middle">\n            <div class="card-list">\n                <div class="card-individual">\n                    <div class="card-view">\n                    </div>\n                    <div class="card-fitness">\n                        <input type="number" class="fitness" max="10" min="0" value="5"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="cation-right">\n            <div id="app">\n                <ul>\n                    <li>Selection Operator\uff1a{{ selectionOperator | selectionFilter }}</li>\n                    <li>Crossover Operator\uff1a{{ crossoverOperator | crossoverFilter}}</li>\n                    <li>Mutation Operator\uff1a{{ mutationOperator | mutationFilter}}</li>\n                    <li>Encoding\uff1a{{ code | codeFilter }}</li>\n                    <li>Population Size\uff1a{{ size }}</li>\n                    <li>Stop Generation\uff1a{{ generation }}</li>\n                    <li>Crossover Rate\uff1a{{ crossover }}</li>\n                    <li>Mutation Rate\uff1a{{ mutation }}</li>\n                </ul>\n            </div>\n            <div class="btn-group">\n                <a class="btn-next" href="/">\n                    Parameters\n                </a>\n                <a class="btn-next" id="next">\n                    Evolution\n                </a>\n            </div>\n            <div class="btn-group">\n                <a class="btn-next" id="save">\n                    Save\n                </a>\n                <a class="btn-next" href="/chart" target="_blank">\n                    chart\n                </a>\n            </div>\n            <div class="times">\n                <a data-index="1">1</a>\n            </div>\n        </div>\n    </div>\n</div>\n<script type="text/javascript" src="js/jquery.min.js"><\/script>\n<script type="text/javascript" src="js/vue.js"><\/script>\n<script type="text/javascript" src="js/jquery.cookie.js"><\/script>\n</body>\n</html>\n')),(0,i.kt)("p",null,"After creating the html template, now we need to create a route to return this view and register it with the system. Therefore, a routing function needs to be added in java > controller > IndexController as shown below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'    @GetMapping("xxxDesign") //The access address can be the file name\n    public String vaseDesign(ModelMap map) {\n        return prefix + "htmlFileName"; //html file name\n    }\n')),(0,i.kt)("h2",{id:"create-controller"},"Create controller"),(0,i.kt)("p",null,"Create a controller and implement the evolution function, which acts as a population evolution function, and calls this function asynchronously."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'@Controller\n@RequestMapping("/path")//\npublic class xxxController extends BaseController{\n    @PostMapping("/evolution")\n    @ResponseBody\n    public List<VaseVO> evolution(String configStr, String populationStr) {\n        //population list\n        List<xxxVO> list = JSONArray.parseArray(populationStr, xxxVO.class);\n        //parameter configuration\n        ConfigVO config = JSONObject.parseObject(configStr, ConfigVO.class);\n       \n        Selection selection = getSelection(config);//selection operator\n        Crossover crossover = getCrossover(config);//crossover operator\n        //mutation boundary range\n        List<Integer> parameterRange=new ArrayList<>(Arrays.asList(8,8,8,8,8,8,8,8,64));\n        Mutation mutation = getMutation(config,parameterRange);//mutation operator\n        \n        double crossoverRate = config.getCrossover();//crossover rate\n        double mutationRate = config.getMutation(); //mutation rate\n\n        GeneticAlgorithm ga = new GeneticAlgorithm(selection, crossover, mutation, crossoverRate, mutationRate);\n        \n        //population coding...\n        \n        Population newPopulation = ga.evolve(new Population(chromosomes));\n        \n        //population decoding...\n       \n    }\n}\n')))}m.isMDXComponent=!0}}]);